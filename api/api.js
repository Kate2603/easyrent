import axios from "axios";
import { RENTCAST_API_KEY, RENTCAST_API_URL } from "../config/apiKeys";

// üîß –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ axios –¥–ª—è Rentcast API
const rentcastAxios = axios.create({
  baseURL: RENTCAST_API_URL,
  headers: {
    Accept: "application/json",
    "X-Api-Key": RENTCAST_API_KEY,
  },
});

// ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä —ñ–∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è–º
export async function fetchRentalListings({
  city,
  state,
  limit = 10,
  page = 1,
  filterSort = "formattedAddress",
}) {
  try {
    console.log("üì§ –ü–∞—Ä–∞–º–µ—Ç—Ä–∏, —è–∫—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—é—Ç—å—Å—è –¥–æ API:", {
      city,
      state,
      limit,
      page,
      sortBy: filterSort,
    });

    const { data } = await rentcastAxios.get("/properties", {
      params: {
        city,
        state,
        limit,
        page,
        sortBy: filterSort,
      },
    });

    console.log("üì• –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ API:", data);

    return Array.isArray(data) ? { listings: data } : data;
  } catch (error) {
    console.error("‚ùå API Error:", error.response?.data || error.message);
    throw error;
  }
}

// ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –æ–¥–Ω—ñ—î—ó –∫–≤–∞—Ä—Ç–∏—Ä–∏ –∑–∞ ID
export async function fetchApartmentDetails(id) {
  try {
    const { data } = await rentcastAxios.get(`/properties/${id}`);
    return data;
  } catch (error) {
    console.error(
      "‚ùå Error fetching apartment details:",
      error.response?.data || error.message
    );
    throw error;
  }
}
